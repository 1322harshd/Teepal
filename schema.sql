BEGIN TRANSACTION;

-- Users Table
CREATE TABLE IF NOT EXISTS Users (
    UserId INTEGER PRIMARY KEY AUTOINCREMENT,
    Name VARCHAR(100),
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DisplayName VARCHAR(100),
    Image VARCHAR(255),
    SecurityQuestion TEXT,
    SecurityAnswer TEXT
);

-- Products Table
CREATE TABLE IF NOT EXISTS Products (
    ProductId INTEGER PRIMARY KEY AUTOINCREMENT,
    Item VARCHAR(100) NOT NULL,
    Brand VARCHAR(100),
    Price DECIMAL(10, 2) NOT NULL,
    Image TEXT,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Orders Table
CREATE TABLE IF NOT EXISTS Orders (
    OrderId INTEGER PRIMARY KEY AUTOINCREMENT,
    UserId INTEGER,
    OrderedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE SET NULL
);

-- OrderDetails Table
CREATE TABLE IF NOT EXISTS OrderDetails (
    OrderDetailId INTEGER PRIMARY KEY AUTOINCREMENT,
    OrderId INTEGER,
    ProductId INTEGER,
    Quantity INTEGER NOT NULL CHECK(Quantity > 0),
    PriceAtPurchase DECIMAL(10, 2),
    FOREIGN KEY (OrderId) REFERENCES Orders(OrderId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId)
);

-- CartItems Table
CREATE TABLE IF NOT EXISTS CartItems (
    CartItemId INTEGER PRIMARY KEY AUTOINCREMENT,
    UserId INTEGER,
    ProductId INTEGER,
    Quantity INTEGER NOT NULL CHECK(Quantity > 0),
    AddedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId) ON DELETE CASCADE
);

-- SavedItems Table
CREATE TABLE IF NOT EXISTS SavedItems (
    SavedItemId INTEGER PRIMARY KEY AUTOINCREMENT,
    UserId INTEGER,
    ProductId INTEGER,
    SavedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES Users(UserId) ON DELETE CASCADE,
    FOREIGN KEY (ProductId) REFERENCES Products(ProductId) ON DELETE CASCADE
);

COMMIT;
